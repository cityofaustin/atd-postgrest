services:
  haproxy:
    image: haproxy:lts
    restart: unless-stopped
    depends_on:
      - postgrest-legacy-scripts
      - postgrest-knack-services
      - postgrest-parking
      - postgrest-bond-reporting
      - postgrest-public-safety-incidents
    ports:
      - "9001:80"
    volumes:
      - "./haproxy/config:/usr/local/etc/haproxy:ro"
      - "./haproxy/maps:/etc/haproxy/maps:ro"

  postgrest-legacy-scripts:
    image: postgrest/postgrest:v13.0.4
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgres://${PG_USER}:${PG_PASSWORD}@${PG_HOST}:5432/postgrest_legacy_scripts
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: postgrest_web_anon
      PGRST_JWT_SECRET: $PGRST_JWT_SECRET_LEGACY_SCRIPTS
      PGREST_MAX_ROWS: $PGREST_MAX_ROWS

  postgrest-knack-services:
    image: postgrest/postgrest:v13.0.4
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgres://${PG_USER}:${PG_PASSWORD}@${PG_HOST}:5432/postgrest_knack_services
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: postgrest_web_anon #In production this role should not be the same as the one used for the connection
      PGRST_JWT_SECRET: $PGRST_JWT_SECRET_KNACK_SERVICES
      PGREST_MAX_ROWS: $PGREST_MAX_ROWS

  postgrest-parking:
    image: postgrest/postgrest:v13.0.4
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgres://${PG_USER}:${PG_PASSWORD}@${PG_HOST}:5432/postgrest_parking
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: postgrest_web_anon #In production this role should not be the same as the one used for the connection
      PGRST_JWT_SECRET: $PGRST_JWT_SECRET_PARKING
      PGREST_MAX_ROWS: 10000

  postgrest-road-conditions:
    image: postgrest/postgrest:v13.0.4
    restart: unless-stopped
    environment:
      #PGRST_LOG_LEVEL: debug
      PGRST_DB_URI: postgres://${PG_USER}:${PG_PASSWORD}@${PG_HOST}:5432/postgrest_road_conditions
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: postgrest_web_anon #In production this role should not be the same as the one used for the connection
      PGRST_JWT_SECRET: $PGRST_JWT_SECRET_ROAD_CONDITIONS
      PGREST_MAX_ROWS: 10000

  postgrest-bond-reporting:
    image: postgrest/postgrest:v13.0.4
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgres://${PG_USER}:${PG_PASSWORD}@${PG_HOST}:5432/postgrest_bond_reporting
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: postgrest_web_anon #In production this role should not be the same as the one used for the connection
      PGRST_JWT_SECRET: $PGRST_JWT_SECRET_BOND_REPORTING
      PGREST_MAX_ROWS: 10000

  postgrest-public-safety-incidents:
    image: postgrest/postgrest:v13.0.4
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgres://${PG_USER}:${PG_PASSWORD}@${PG_HOST}:5432/postgrest_public_safety_incidents
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: postgrest_web_anon #In production this role should not be the same as the one used for the connection
      PGRST_JWT_SECRET: $PGRST_JWT_SECRET_PUBLIC_SAFETY_INCIDENTS
      PGREST_MAX_ROWS: 10000
